Preguntas:
1) Abstracción de los tests 01 y 02
En los test 01 y 02 hay código repetido. Cuando lo extrajeron crearon algo nuevo. Eso es algo que estaba en la realidad y no estaba representado en nuestro código, por eso teníamos código repetido. ¿Cuál es esa entidad de la realidad que crearon?

2) Cómo representar en Smalltalk
¿Cuáles son las formas en que podemos representar entes de la realidad en Smalltalk que conocés? Es decir, ¿qué cosas del lenguaje Smalltalk puedo usar para representar entidades de la realidad?

3) Teoría de Naur
¿Qué relación hay entre sacar código repetido (creando abstracciones) y la teoría del modelo/sistema (del paper de Naur)?

1) Al extraer el código repetido en los tests 01 y 02, creamos un temporizador para verificar que los tiempos en realizar algunas acciones, no excedían un límite puesto por los tests.

2) La manera más simple de representar entes de la realidad en Smalltalk es la creación de objetos (y clases), que tengan un funcionamiento representativamente parecido.

3) Al sacar el código repetido creando abstracciones, uno en realidad está ampliando el modelo programado de tal manera que el sistema en la realidad esté mejor representado. A la vez estamos aumentando la legibilidad ya que basta con entender la abstracción para comprender todas sus apariciones luego.
